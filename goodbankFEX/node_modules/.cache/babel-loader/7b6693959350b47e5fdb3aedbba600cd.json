{"ast":null,"code":"var _jsxFileName = \"/home/scott/Dropbox/MERN Class (MIT xPRO)/Capstone Bad Bank Project/goodbankfe/src/components/createaccount.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Redirect } from \"react-router-dom\";\nimport { Button, Card } from \"react-bootstrap\";\nimport * as Yup from \"yup\";\nimport UserContext from \"./context.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateAccount = _ref => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  let {\n    loggedIn,\n    setLoggedIn\n  } = _ref;\n  const ctx = useContext(UserContext);\n\n  const CreateAccountForm = () => {\n    _s();\n\n    const [first, setFirst] = React.useState(true);\n    const [confMsg, setConfMsg] = React.useState(\"\");\n\n    function handleCreate(values) {\n      const url = `/account/create/${values.name}/${values.email}/${values.password}/100`;\n\n      (async () => {\n        var res = await fetch(url);\n        var data = await res.json();\n        console.log(data);\n      })();\n\n      setConfMsg(\"Account Created!\");\n      setTimeout(() => setConfMsg(\"\"), 5000);\n      setFirst(false);\n      ctx.setCurrentUser(values.name);\n      ctx.setCurrentEmail(values.email);\n      ctx.setCurrentBalance(100);\n      setLoggedIn(true);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: \"\",\n        email: \"\",\n        password: \"\"\n      },\n      validationSchema: validationSchema,\n      onSubmit: (values, _ref2) => {\n        let {\n          resetForm,\n          setSubmitting\n        } = _ref2;\n        handleCreate(values);\n        setSubmitting(false);\n        resetForm();\n      },\n      children: _ref3 => {\n        let {\n          isSubmitting,\n          isValid,\n          dirty\n        } = _ref3;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            bg: \"warning\",\n            text: \"dark\",\n            style: {\n              width: \"36rem\",\n              marginLeft: \"auto\",\n              marginRight: \"auto\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: \"Create Account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n                children: \"Sign up now and get $100!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"name\",\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  id: \"name\",\n                  name: \"name\",\n                  className: \"form-control\",\n                  type: \"name\",\n                  placeholder: \"Enter Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"name\",\n                  component: \"span\",\n                  className: \"error\",\n                  style: {\n                    color: \"red\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"email\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  id: \"email\",\n                  name: \"email\",\n                  className: \"form-control\",\n                  type: \"email\",\n                  placeholder: \"Enter Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"email\",\n                  component: \"span\",\n                  className: \"error\",\n                  style: {\n                    color: \"red\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"password\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  id: \"password\",\n                  name: \"password\",\n                  className: \"form-control\",\n                  type: \"password\",\n                  placeholder: \"Enter Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"password\",\n                  component: \"span\",\n                  className: \"error\",\n                  style: {\n                    color: \"red\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this), first && /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"primary\",\n                className: \"btn btn-primary\",\n                disabled: isSubmitting || !(isValid && dirty),\n                children: \"Create Account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this), !first && /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"submit\",\n                    variant: \"primary\",\n                    className: \"btn btn-primary\",\n                    disabled: isSubmitting || !(isValid && dirty),\n                    children: \"Add Another Account\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  item: true,\n                  xs: 6,\n                  justifyContent: \"flex-end\",\n                  alignItems: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    style: {\n                      color: \"green\"\n                    },\n                    children: confMsg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  };\n\n  _s(CreateAccountForm, \"IOpyn3sSc7cJ4j8WfwymZT5hxRU=\");\n\n  if (ctx.currentUser === \"\") {\n    return CreateAccountForm();\n  } else {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/deposit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s2(CreateAccount, \"/dMy7t63NXD4eYACoT93CePwGrg=\");\n\n_c = CreateAccount;\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().email(\"Invalid email address\").required(\"Email is required\"),\n  password: Yup.string().required(\"Password is required\").min(8, \"Password must be at least 8 characters\"),\n  name: Yup.string().required(\"Name is required\")\n});\nexport default CreateAccount;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAccount\");","map":{"version":3,"sources":["/home/scott/Dropbox/MERN Class (MIT xPRO)/Capstone Bad Bank Project/goodbankfe/src/components/createaccount.js"],"names":["React","useContext","Formik","Field","Form","ErrorMessage","Grid","Redirect","Button","Card","Yup","UserContext","CreateAccount","loggedIn","setLoggedIn","ctx","CreateAccountForm","first","setFirst","useState","confMsg","setConfMsg","handleCreate","values","url","name","email","password","res","fetch","data","json","console","log","setTimeout","setCurrentUser","setCurrentEmail","setCurrentBalance","validationSchema","resetForm","setSubmitting","isSubmitting","isValid","dirty","width","marginLeft","marginRight","color","currentUser","object","shape","string","required","min"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Button, Card } from \"react-bootstrap\";\r\nimport * as Yup from \"yup\";\r\nimport UserContext from \"./context.js\";\r\n\r\nconst CreateAccount = ({ loggedIn, setLoggedIn }) => {\r\n  const ctx = useContext(UserContext);\r\n\r\n  const CreateAccountForm = () => {\r\n    const [first, setFirst] = React.useState(true);\r\n    const [confMsg, setConfMsg] = React.useState(\"\");\r\n\r\n    function handleCreate(values) {\r\n      const url = `/account/create/${values.name}/${values.email}/${values.password}/100`;\r\n      (async () => {\r\n        var res = await fetch(url);\r\n        var data = await res.json();\r\n        console.log(data);\r\n      })();\r\n      setConfMsg(\"Account Created!\");\r\n      setTimeout(() => setConfMsg(\"\"), 5000);\r\n      setFirst(false);\r\n      ctx.setCurrentUser(values.name);\r\n      ctx.setCurrentEmail(values.email);\r\n      ctx.setCurrentBalance(100);\r\n      setLoggedIn(true);\r\n    }\r\n\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          name: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values, { resetForm, setSubmitting }) => {\r\n          handleCreate(values);\r\n          setSubmitting(false);\r\n          resetForm();\r\n        }}\r\n      >\r\n        {({ isSubmitting, isValid, dirty }) => (\r\n          <Form>\r\n            <Card\r\n              bg=\"warning\"\r\n              text=\"dark\"\r\n              style={{\r\n                width: \"36rem\",\r\n                marginLeft: \"auto\",\r\n                marginRight: \"auto\",\r\n              }}\r\n            >\r\n              <Card.Body>\r\n                <Card.Title>Create Account</Card.Title>\r\n                <Card.Subtitle>Sign up now and get $100!</Card.Subtitle>\r\n                <br />\r\n                <Card.Text>\r\n                  <label htmlFor=\"name\">Name</label>\r\n                  <Field\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    className=\"form-control\"\r\n                    type=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                  />\r\n                  <ErrorMessage\r\n                    name=\"name\"\r\n                    component=\"span\"\r\n                    className=\"error\"\r\n                    style={{ color: \"red\" }}\r\n                  />\r\n                  <br />\r\n                  <br />\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Field\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    className=\"form-control\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                  />\r\n                  <ErrorMessage\r\n                    name=\"email\"\r\n                    component=\"span\"\r\n                    className=\"error\"\r\n                    style={{ color: \"red\" }}\r\n                  />\r\n                  <br />\r\n                  <br />\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <Field\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    className=\"form-control\"\r\n                    type=\"password\"\r\n                    placeholder=\"Enter Password\"\r\n                  />\r\n                  <ErrorMessage\r\n                    name=\"password\"\r\n                    component=\"span\"\r\n                    className=\"error\"\r\n                    style={{ color: \"red\" }}\r\n                  />\r\n                </Card.Text>\r\n                {first && (\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"primary\"\r\n                    className=\"btn btn-primary\"\r\n                    disabled={isSubmitting || !(isValid && dirty)}\r\n                  >\r\n                    Create Account\r\n                  </Button>\r\n                )}\r\n                {!first && (\r\n                  <Grid container item xs={12}>\r\n                    <Grid item xs={6}>\r\n                      <Button\r\n                        type=\"submit\"\r\n                        variant=\"primary\"\r\n                        className=\"btn btn-primary\"\r\n                        disabled={isSubmitting || !(isValid && dirty)}\r\n                      >\r\n                        Add Another Account\r\n                      </Button>\r\n                    </Grid>\r\n                    <Grid\r\n                      container\r\n                      item\r\n                      xs={6}\r\n                      justifyContent=\"flex-end\"\r\n                      alignItems=\"center\"\r\n                    >\r\n                      <h5 style={{ color: \"green\" }}>{confMsg}</h5>\r\n                    </Grid>\r\n                  </Grid>\r\n                )}\r\n              </Card.Body>\r\n            </Card>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    );\r\n  };\r\n\r\n  if (ctx.currentUser === \"\") {\r\n    return CreateAccountForm();\r\n  } else {\r\n    return <Redirect to=\"/deposit\" />;\r\n  }\r\n};\r\nconst validationSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .email(\"Invalid email address\")\r\n    .required(\"Email is required\"),\r\n  password: Yup.string()\r\n    .required(\"Password is required\")\r\n    .min(8, \"Password must be at least 8 characters\"),\r\n  name: Yup.string().required(\"Name is required\"),\r\n});\r\n\r\nexport default CreateAccount;\r\n"]},"metadata":{},"sourceType":"module"}