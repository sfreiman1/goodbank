{"ast":null,"code":"var _jsxFileName = \"/home/scott/Dropbox/MERN Class (MIT xPRO)/Capstone Bad Bank Project/goodbankfe/src/components/createaccount.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Button, Card } from \"react-bootstrap\";\nimport UserContext from \"./context.js\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateAccount = () => {\n  _s();\n\n  const ctx = React.useContext(UserContext);\n  const [first, setFirst] = React.useState(true);\n  const [confMsg, setConfMsg] = React.useState(\"\");\n\n  function handleCreate(values) {\n    ctx.users.push({\n      name: values.name,\n      email: values.email,\n      password: values.password,\n      balance: 100\n    });\n    setConfMsg(\"Account Created!\");\n    setTimeout(() => setConfMsg(\"\"), 5000);\n    setFirst(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      password: \"\"\n    },\n    validationSchema: validationSchema,\n    onSubmit: (values, _ref) => {\n      let {\n        resetForm,\n        setSubmitting\n      } = _ref;\n      handleCreate(values);\n      setSubmitting(false);\n      resetForm();\n    },\n    children: _ref2 => {\n      let {\n        isSubmitting,\n        isValid,\n        dirty\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          bg: \"warning\",\n          text: \"dark\",\n          style: {\n            width: \"36rem\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Create Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                id: \"name\",\n                name: \"name\",\n                className: \"form-control\",\n                type: \"name\",\n                placeholder: \"Enter Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"name\",\n                component: \"span\",\n                className: \"error\",\n                style: {\n                  color: \"red\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                id: \"email\",\n                name: \"email\",\n                className: \"form-control\",\n                type: \"email\",\n                placeholder: \"Enter Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"email\",\n                component: \"span\",\n                className: \"error\",\n                style: {\n                  color: \"red\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                id: \"password\",\n                name: \"password\",\n                className: \"form-control\",\n                type: \"password\",\n                placeholder: \"Enter Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"password\",\n                component: \"span\",\n                className: \"error\",\n                style: {\n                  color: \"red\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), first && /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"primary\",\n              className: \"btn btn-primary\",\n              disabled: isSubmitting || !(isValid && dirty),\n              children: \"Create Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), !first && /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              item: true,\n              xs: 12,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  variant: \"primary\",\n                  className: \"btn btn-primary\",\n                  disabled: isSubmitting || !(isValid && dirty),\n                  children: \"Add Another Account\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                item: true,\n                xs: 6,\n                justifyContent: \"flex-end\",\n                alignItems: \"center\",\n                children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                  style: {\n                    color: \"green\"\n                  },\n                  children: confMsg\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateAccount, \"pWdDIyskEtWq/qlf5SrG4bZYXic=\");\n\n_c = CreateAccount;\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().email(\"Invalid email address\").required(\"Email is required\"),\n  password: Yup.string().required(\"Password is required\").min(8, 'Password must be at least 8 characters'),\n  name: Yup.string().required(\"Name is required\")\n});\nexport default CreateAccount;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAccount\");","map":{"version":3,"sources":["/home/scott/Dropbox/MERN Class (MIT xPRO)/Capstone Bad Bank Project/goodbankfe/src/components/createaccount.js"],"names":["React","Formik","Field","Form","ErrorMessage","Grid","Button","Card","UserContext","Yup","CreateAccount","ctx","useContext","first","setFirst","useState","confMsg","setConfMsg","handleCreate","values","users","push","name","email","password","balance","setTimeout","validationSchema","resetForm","setSubmitting","isSubmitting","isValid","dirty","width","marginLeft","marginRight","color","object","shape","string","required","min"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport { Button, Card } from \"react-bootstrap\";\r\nimport UserContext from \"./context.js\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst CreateAccount = () => {\r\n  const ctx = React.useContext(UserContext);\r\n\r\n  const [first, setFirst] = React.useState(true);\r\n  const [confMsg, setConfMsg] = React.useState(\"\");\r\n\r\n  function handleCreate(values) {\r\n    ctx.users.push({\r\n      name: values.name,\r\n      email: values.email,\r\n      password: values.password,\r\n      balance: 100,\r\n    });\r\n    setConfMsg(\"Account Created!\");\r\n    setTimeout(() => setConfMsg(\"\"), 5000);\r\n    setFirst(false);\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n      }}\r\n      validationSchema={validationSchema}\r\n      onSubmit={(values, { resetForm, setSubmitting }) => {\r\n        handleCreate(values);\r\n        setSubmitting(false);\r\n        resetForm();\r\n      }}\r\n    >\r\n      {({ isSubmitting, isValid, dirty }) => (\r\n        <Form>\r\n          <Card bg=\"warning\" text=\"dark\" style={{ width: \"36rem\" , marginLeft: \"auto\", marginRight: \"auto\" }}>\r\n            <Card.Body>\r\n              <Card.Title>Create Account</Card.Title>\r\n              <Card.Text>\r\n                <label htmlFor=\"name\">Name</label>\r\n                <Field\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  className=\"form-control\"\r\n                  type=\"name\"\r\n                  placeholder=\"Enter Name\"\r\n                />\r\n                <ErrorMessage\r\n                  name=\"name\"\r\n                  component=\"span\"\r\n                  className=\"error\"\r\n                  style={{ color: \"red\" }}\r\n                />\r\n                <br />\r\n                <br />\r\n                <label htmlFor=\"email\">Email</label>\r\n                <Field\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  className=\"form-control\"\r\n                  type=\"email\"\r\n                  placeholder=\"Enter Email\"\r\n                />\r\n                <ErrorMessage\r\n                  name=\"email\"\r\n                  component=\"span\"\r\n                  className=\"error\"\r\n                  style={{ color: \"red\" }}\r\n                />\r\n                <br />\r\n                <br />\r\n                <label htmlFor=\"password\">Password</label>\r\n                <Field\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  className=\"form-control\"\r\n                  type=\"password\"\r\n                  placeholder=\"Enter Password\"\r\n                />\r\n                <ErrorMessage\r\n                  name=\"password\"\r\n                  component=\"span\"\r\n                  className=\"error\"\r\n                  style={{ color: \"red\" }}\r\n                />\r\n              </Card.Text>\r\n              {first && (\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"primary\"\r\n                  className=\"btn btn-primary\"\r\n                  disabled={isSubmitting || !(isValid && dirty)}\r\n                >\r\n                  Create Account\r\n                </Button>\r\n              )}\r\n              {!first && (\r\n                <Grid container item xs={12}>\r\n                  <Grid item xs={6}>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"primary\"\r\n                      className=\"btn btn-primary\"\r\n                      disabled={isSubmitting || !(isValid && dirty)}\r\n                    >\r\n                      Add Another Account\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid\r\n                    container\r\n                    item\r\n                    xs={6}\r\n                    justifyContent=\"flex-end\"\r\n                    alignItems=\"center\"\r\n                  >\r\n                    <h5 style={{ color: \"green\" }}>{confMsg}</h5>\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n            </Card.Body>\r\n          </Card>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\nconst validationSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .email(\"Invalid email address\")\r\n    .required(\"Email is required\"),\r\n  password: Yup.string().required(\"Password is required\")\r\n  .min(8,'Password must be at least 8 characters'),\r\n  name: Yup.string().required(\"Name is required\"),\r\n});\r\n\r\nexport default CreateAccount;\r\n"]},"metadata":{},"sourceType":"module"}