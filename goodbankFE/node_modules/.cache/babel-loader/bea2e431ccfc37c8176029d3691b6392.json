{"ast":null,"code":"import _regeneratorRuntime from\"/home/scott/Dropbox/MERN Class (MIT xPRO)/Capstone Good Bank Project/goodbank/goodbankFE/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/scott/Dropbox/MERN Class (MIT xPRO)/Capstone Good Bank Project/goodbank/goodbankFE/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/scott/Dropbox/MERN Class (MIT xPRO)/Capstone Good Bank Project/goodbank/goodbankFE/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext}from\"react\";import{Formik,Field,Form,ErrorMessage}from\"formik\";import Grid from\"@material-ui/core/Grid\";import{Redirect}from\"react-router-dom\";import{Button,Card}from\"react-bootstrap\";import*as Yup from\"yup\";import UserContext from\"./context.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CreateAccount=function CreateAccount(_ref){var loggedIn=_ref.loggedIn,setLoggedIn=_ref.setLoggedIn;var ctx=useContext(UserContext);var CreateAccountForm=function CreateAccountForm(){var _React$useState=React.useState(true),_React$useState2=_slicedToArray(_React$useState,2),first=_React$useState2[0],setFirst=_React$useState2[1];var _React$useState3=React.useState(\"\"),_React$useState4=_slicedToArray(_React$useState3,2),confMsg=_React$useState4[0],setConfMsg=_React$useState4[1];function handleCreate(values){var url=\"/account/create/\".concat(values.name,\"/\").concat(values.email,\"/\").concat(values.password,\"/100\");_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(url);case 2:res=_context.sent;_context.next=5;return res.json();case 5:data=_context.sent;console.log(data);case 7:case\"end\":return _context.stop();}}},_callee);}))();setConfMsg(\"Account Created!\");setTimeout(function(){return setConfMsg(\"\");},5000);setFirst(false);ctx.setCurrentUser(values.name);ctx.setCurrentEmail(values.email);ctx.setCurrentBalance(100);setLoggedIn(true);}return/*#__PURE__*/_jsx(Formik,{initialValues:{name:\"\",email:\"\",password:\"\"},validationSchema:validationSchema,onSubmit:function onSubmit(values,_ref3){var resetForm=_ref3.resetForm,setSubmitting=_ref3.setSubmitting;handleCreate(values);setSubmitting(false);resetForm();},children:function children(_ref4){var isSubmitting=_ref4.isSubmitting,isValid=_ref4.isValid,dirty=_ref4.dirty;return/*#__PURE__*/_jsx(Form,{children:/*#__PURE__*/_jsx(Card,{bg:\"warning\",text:\"dark\",style:{width:\"36rem\",marginLeft:\"auto\",marginRight:\"auto\"},children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{children:\"Create Account\"}),/*#__PURE__*/_jsx(Card.Subtitle,{children:\"Sign up now and get $100!\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(Card.Text,{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Name\"}),/*#__PURE__*/_jsx(Field,{id:\"name\",name:\"name\",className:\"form-control\",type:\"name\",placeholder:\"Enter Name\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"name\",component:\"span\",className:\"error\",style:{color:\"red\"}}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email\"}),/*#__PURE__*/_jsx(Field,{id:\"email\",name:\"email\",className:\"form-control\",type:\"email\",placeholder:\"Enter Email\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"email\",component:\"span\",className:\"error\",style:{color:\"red\"}}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Password\"}),/*#__PURE__*/_jsx(Field,{id:\"password\",name:\"password\",className:\"form-control\",type:\"password\",placeholder:\"Enter Password\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"password\",component:\"span\",className:\"error\",style:{color:\"red\"}})]}),first&&/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",className:\"btn btn-primary\",disabled:isSubmitting||!(isValid&&dirty),children:\"Create Account\"}),!first&&/*#__PURE__*/_jsxs(Grid,{container:true,item:true,xs:12,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",className:\"btn btn-primary\",disabled:isSubmitting||!(isValid&&dirty),children:\"Add Another Account\"})}),/*#__PURE__*/_jsx(Grid,{container:true,item:true,xs:6,justifyContent:\"flex-end\",alignItems:\"center\",children:/*#__PURE__*/_jsx(\"h5\",{style:{color:\"green\"},children:confMsg})})]})]})})});}});};if(ctx.currentUser===\"\"){return CreateAccountForm();}else{return/*#__PURE__*/_jsx(Redirect,{to:\"/deposit\"});}};var validationSchema=Yup.object().shape({email:Yup.string().email(\"Invalid email address\").required(\"Email is required\"),password:Yup.string().required(\"Password is required\").min(8,\"Password must be at least 8 characters\"),name:Yup.string().required(\"Name is required\")});export default CreateAccount;","map":{"version":3,"sources":["/home/scott/Dropbox/MERN Class (MIT xPRO)/Capstone Good Bank Project/goodbank/goodbankFE/src/components/createaccount.js"],"names":["React","useContext","Formik","Field","Form","ErrorMessage","Grid","Redirect","Button","Card","Yup","UserContext","CreateAccount","loggedIn","setLoggedIn","ctx","CreateAccountForm","useState","first","setFirst","confMsg","setConfMsg","handleCreate","values","url","name","email","password","fetch","res","json","data","console","log","setTimeout","setCurrentUser","setCurrentEmail","setCurrentBalance","validationSchema","resetForm","setSubmitting","isSubmitting","isValid","dirty","width","marginLeft","marginRight","color","currentUser","object","shape","string","required","min"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Button, Card } from \"react-bootstrap\";\r\nimport * as Yup from \"yup\";\r\nimport UserContext from \"./context.js\";\r\n\r\nconst CreateAccount = ({ loggedIn, setLoggedIn }) => {\r\n  \r\n  const ctx = useContext(UserContext);\r\n\r\n  const CreateAccountForm = () => {\r\n    const [first, setFirst] = React.useState(true);\r\n    const [confMsg, setConfMsg] = React.useState(\"\");\r\n\r\n    function handleCreate(values) {\r\n      const url = `/account/create/${values.name}/${values.email}/${values.password}/100`;\r\n      (async () => {\r\n        var res = await fetch(url);\r\n        var data = await res.json();\r\n        console.log(data);\r\n      })();\r\n      setConfMsg(\"Account Created!\");\r\n      setTimeout(() => setConfMsg(\"\"), 5000);\r\n      setFirst(false);\r\n      ctx.setCurrentUser(values.name);\r\n      ctx.setCurrentEmail(values.email);\r\n      ctx.setCurrentBalance(100);\r\n      setLoggedIn(true);\r\n    }\r\n\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          name: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values, { resetForm, setSubmitting }) => {\r\n          handleCreate(values);\r\n          setSubmitting(false);\r\n          resetForm();\r\n        }}\r\n      >\r\n        {({ isSubmitting, isValid, dirty }) => (\r\n          <Form>\r\n            <Card\r\n              bg=\"warning\"\r\n              text=\"dark\"\r\n              style={{\r\n                width: \"36rem\",\r\n                marginLeft: \"auto\",\r\n                marginRight: \"auto\",\r\n              }}\r\n            >\r\n              <Card.Body>\r\n                <Card.Title>Create Account</Card.Title>\r\n                <Card.Subtitle>Sign up now and get $100!</Card.Subtitle>\r\n                <br />\r\n                <Card.Text>\r\n                  <label htmlFor=\"name\">Name</label>\r\n                  <Field\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    className=\"form-control\"\r\n                    type=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                  />\r\n                  <ErrorMessage\r\n                    name=\"name\"\r\n                    component=\"span\"\r\n                    className=\"error\"\r\n                    style={{ color: \"red\" }}\r\n                  />\r\n                  <br />\r\n                  <br />\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Field\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    className=\"form-control\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                  />\r\n                  <ErrorMessage\r\n                    name=\"email\"\r\n                    component=\"span\"\r\n                    className=\"error\"\r\n                    style={{ color: \"red\" }}\r\n                  />\r\n                  <br />\r\n                  <br />\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <Field\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    className=\"form-control\"\r\n                    type=\"password\"\r\n                    placeholder=\"Enter Password\"\r\n                  />\r\n                  <ErrorMessage\r\n                    name=\"password\"\r\n                    component=\"span\"\r\n                    className=\"error\"\r\n                    style={{ color: \"red\" }}\r\n                  />\r\n                </Card.Text>\r\n                {first && (\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"primary\"\r\n                    className=\"btn btn-primary\"\r\n                    disabled={isSubmitting || !(isValid && dirty)}\r\n                  >\r\n                    Create Account\r\n                  </Button>\r\n                )}\r\n                {!first && (\r\n                  <Grid container item xs={12}>\r\n                    <Grid item xs={6}>\r\n                      <Button\r\n                        type=\"submit\"\r\n                        variant=\"primary\"\r\n                        className=\"btn btn-primary\"\r\n                        disabled={isSubmitting || !(isValid && dirty)}\r\n                      >\r\n                        Add Another Account\r\n                      </Button>\r\n                    </Grid>\r\n                    <Grid\r\n                      container\r\n                      item\r\n                      xs={6}\r\n                      justifyContent=\"flex-end\"\r\n                      alignItems=\"center\"\r\n                    >\r\n                      <h5 style={{ color: \"green\" }}>{confMsg}</h5>\r\n                    </Grid>\r\n                  </Grid>\r\n                )}\r\n              </Card.Body>\r\n            </Card>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    );\r\n  };\r\n\r\n  if (ctx.currentUser === \"\") {\r\n    return CreateAccountForm();\r\n  } else {\r\n    return <Redirect to=\"/deposit\" />;\r\n  }\r\n};\r\nconst validationSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .email(\"Invalid email address\")\r\n    .required(\"Email is required\"),\r\n  password: Yup.string()\r\n    .required(\"Password is required\")\r\n    .min(8, \"Password must be at least 8 characters\"),\r\n  name: Yup.string().required(\"Name is required\"),\r\n});\r\n\r\nexport default CreateAccount;\r\n"]},"metadata":{},"sourceType":"module"}