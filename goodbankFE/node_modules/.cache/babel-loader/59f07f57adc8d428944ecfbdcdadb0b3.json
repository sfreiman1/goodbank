{"ast":null,"code":"var _jsxFileName = \"/home/scott/Dropbox/MERN Class (MIT xPRO)/Capstone Bad Bank Project/goodbankfe/src/components/login.js\",\n    _s = $RefreshSig$();\n\n// login.js - testing Formik and Yup\nimport React, { useContext } from \"react\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport { Redirect } from \"react-router-dom\";\nimport { Button, Card } from \"react-bootstrap\";\nimport UserContext from \"./context.js\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = _ref => {\n  _s();\n\n  let {\n    loggedIn,\n    setLoggedIn\n  } = _ref;\n  const ctx = useContext(UserContext);\n  const [, updateState] = React.useState();\n  const forceUpdate = React.useCallback(() => updateState({}), []);\n\n  function ValidateLogin(newEmail, newPassword) {\n    // Check to make sure user is in database\n    fetch(`/account/find/${newEmail}`).then(response => response.json()).then(data => {\n      if (data.length === 0) {\n        alert(\"Login Failed\");\n        setLoggedIn(false);\n      } else if (data[0].password !== newPassword) {\n        alert(\"Password Incorrect\");\n        setLoggedIn(false);\n      } else {\n        ctx.name = data[0].name;\n        ctx.balance = data[0].balance;\n        setLoggedIn(true);\n      }\n    });\n  }\n\n  const LoginForm = () => {\n    return /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: \"\",\n        password: \"\"\n      },\n      validationSchema: validationSchema,\n      onSubmit: (values, _ref2) => {\n        let {\n          setSubmitting\n        } = _ref2;\n        ValidateLogin(values.email, values.password);\n        forceUpdate();\n        setSubmitting(false);\n      },\n      children: _ref3 => {\n        let {\n          isSubmitting,\n          isValid,\n          dirty\n        } = _ref3;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            bg: \"warning\",\n            text: \"dark\",\n            style: {\n              width: \"36rem\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: \"Login to Bad Bank\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"email\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  id: \"email\",\n                  name: \"email\",\n                  className: \"form-control\",\n                  type: \"email\",\n                  placeholder: \"Enter Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"email\",\n                  component: \"span\",\n                  className: \"error\",\n                  style: {\n                    color: \"red\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"password\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  id: \"password\",\n                  name: \"password\",\n                  className: \"form-control\",\n                  type: \"password\",\n                  placeholder: \"Enter Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"password\",\n                  component: \"span\",\n                  className: \"error\",\n                  style: {\n                    color: \"red\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"primary\",\n                className: \"btn btn-primary\",\n                disabled: isSubmitting || !(isValid && dirty),\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  };\n\n  const handleLogOut = () => {\n    ctx.setCurrentUser(-1);\n    setLoggedIn(false);\n  };\n\n  if (ctx.currentUser === -1) {\n    return LoginForm();\n  } else if (loggedIn) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      bg: \"warning\",\n      text: \"dark\",\n      style: {\n        width: \"36rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: [\"Welcome \", ctx.name, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"danger\",\n          className: \"btn btn-primary\",\n          onClick: handleLogOut,\n          children: \"Log Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this);\n  } else {\n    setLoggedIn(false);\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/deposit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s(Login, \"9I9tOqJvuU+3UG6g3YlRT3Zt6Yk=\");\n\n_c = Login;\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().email(\"Invalid email address\").required(\"Email is required\"),\n  password: Yup.string().required(\"Password is required\")\n});\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/scott/Dropbox/MERN Class (MIT xPRO)/Capstone Bad Bank Project/goodbankfe/src/components/login.js"],"names":["React","useContext","Formik","Field","Form","ErrorMessage","Redirect","Button","Card","UserContext","Yup","Login","loggedIn","setLoggedIn","ctx","updateState","useState","forceUpdate","useCallback","ValidateLogin","newEmail","newPassword","fetch","then","response","json","data","length","alert","password","name","balance","LoginForm","email","validationSchema","values","setSubmitting","isSubmitting","isValid","dirty","width","color","handleLogOut","setCurrentUser","currentUser","object","shape","string","required"],"mappings":"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","sourcesContent":["// login.js - testing Formik and Yup\n\nimport React, { useContext } from \"react\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { Button, Card } from \"react-bootstrap\";\n\nimport UserContext from \"./context.js\";\n\nimport * as Yup from \"yup\";\n\nconst Login = ({ loggedIn, setLoggedIn }) => {\n  const ctx = useContext(UserContext);\n\n  const [, updateState] = React.useState();\n  const forceUpdate = React.useCallback(() => updateState({}), []);\n  function ValidateLogin(newEmail, newPassword) {\n    // Check to make sure user is in database\n    fetch(`/account/find/${newEmail}`)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.length === 0) {\n          alert(\"Login Failed\");\n          setLoggedIn(false);\n        } else if (data[0].password !== newPassword) {\n          alert(\"Password Incorrect\");\n          setLoggedIn(false);\n        } else {\n          ctx.name = data[0].name;\n          ctx.balance = data[0].balance;\n          setLoggedIn(true);\n        }\n      });\n  }\n\n  const LoginForm = () => {\n    return (\n      <Formik\n        initialValues={{\n          email: \"\",\n          password: \"\",\n        }}\n        validationSchema={validationSchema}\n        onSubmit={(values, { setSubmitting }) => {\n          ValidateLogin(values.email, values.password);\n          forceUpdate();\n          setSubmitting(false);\n        }}\n      >\n        {({ isSubmitting, isValid, dirty }) => (\n          <Form>\n            <Card bg=\"warning\" text=\"dark\" style={{ width: \"36rem\" }}>\n              <Card.Body>\n                <Card.Title>Login to Bad Bank</Card.Title>\n                <Card.Text>\n                  <label htmlFor=\"email\">Email</label>\n                  <Field\n                    id=\"email\"\n                    name=\"email\"\n                    className=\"form-control\"\n                    type=\"email\"\n                    placeholder=\"Enter Email\"\n                  />\n                  <ErrorMessage\n                    name=\"email\"\n                    component=\"span\"\n                    className=\"error\"\n                    style={{ color: \"red\" }}\n                  />\n                  <br />\n                  <br />\n                  <label htmlFor=\"password\">Password</label>\n                  <Field\n                    id=\"password\"\n                    name=\"password\"\n                    className=\"form-control\"\n                    type=\"password\"\n                    placeholder=\"Enter Password\"\n                  />\n                  <ErrorMessage\n                    name=\"password\"\n                    component=\"span\"\n                    className=\"error\"\n                    style={{ color: \"red\" }}\n                  />\n                </Card.Text>\n\n                <Button\n                  type=\"submit\"\n                  variant=\"primary\"\n                  className=\"btn btn-primary\"\n                  disabled={isSubmitting || !(isValid && dirty)}\n                >\n                  Login\n                </Button>\n              </Card.Body>\n            </Card>\n          </Form>\n        )}\n      </Formik>\n    );\n  };\n  const handleLogOut = () => {\n    ctx.setCurrentUser(-1);\n    setLoggedIn(false);\n  };\n\n  if (ctx.currentUser === -1) {\n    return LoginForm();\n  } else if (loggedIn) {\n    return (\n      <Card bg=\"warning\" text=\"dark\" style={{ width: \"36rem\" }}>\n        <Card.Body>\n          <Card.Title>Welcome {ctx.name}!</Card.Title>\n          <br />\n          <Button\n            type=\"submit\"\n            variant=\"danger\"\n            className=\"btn btn-primary\"\n            onClick={handleLogOut}\n          >\n            Log Out\n          </Button>\n        </Card.Body>\n      </Card>\n    );\n  } else {\n    setLoggedIn(false);\n    return <Redirect to=\"/deposit\" />;\n  }\n};\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string()\n    .email(\"Invalid email address\")\n    .required(\"Email is required\"),\n  password: Yup.string().required(\"Password is required\"),\n});\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}