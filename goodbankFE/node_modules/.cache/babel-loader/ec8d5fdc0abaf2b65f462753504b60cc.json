{"ast":null,"code":"import _slicedToArray from\"/home/scott/Dropbox/MERN Class (MIT xPRO)/Capstone Good Bank Project/goodbank/goodbankFE/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import{Table}from\"react-bootstrap\";import NumberFormat from\"react-number-format\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function AllData(){var _React$useState=React.useState([]),_React$useState2=_slicedToArray(_React$useState,2),allData=_React$useState2[0],setAllData=_React$useState2[1];React.useEffect(function(){// fetch all accounts from API\nfetch(\"/account/all\").then(function(response){return response.json();}).then(function(data){setAllData(data);});},[]);var getRowsData=function getRowsData(){return allData.map(function(user,index){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:index}),/*#__PURE__*/_jsx(\"td\",{children:user.name}),/*#__PURE__*/_jsx(\"td\",{children:user.email}),/*#__PURE__*/_jsx(\"td\",{children:user.password}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(NumberFormat,{value:user.balance,displayType:\"text\",thousandSeparator:true,prefix:\"  $\",decimalScale:\"2\",fixedDecimalScale:true})})]});});};return/*#__PURE__*/_jsxs(Table,{striped:true,bordered:true,children:[/*#__PURE__*/_jsxs(\"thead\",{children:[/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:\"45\",align:\"center\",style:{backgroundColor:\"green\",color:\"white\"},children:\"USER ACCOUNTS\"})}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"#\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Password\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Balance\"})]})]}),/*#__PURE__*/_jsx(\"tbody\",{children:getRowsData()})]});}export default AllData;","map":{"version":3,"sources":["/home/scott/Dropbox/MERN Class (MIT xPRO)/Capstone Good Bank Project/goodbank/goodbankFE/src/components/alldata.js"],"names":["React","Table","NumberFormat","AllData","useState","allData","setAllData","useEffect","fetch","then","response","json","data","getRowsData","map","user","index","name","email","password","balance","backgroundColor","color"],"mappings":"2KAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,KAAsB,iBAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,qBAAzB,C,wFAEA,QAASC,CAAAA,OAAT,EAAmB,CACjB,oBAA8BH,KAAK,CAACI,QAAN,CAAe,EAAf,CAA9B,oDAAOC,OAAP,qBAAgBC,UAAhB,qBAEAN,KAAK,CAACO,SAAN,CAAgB,UAAM,CACpB;AACAC,KAAK,CAAC,cAAD,CAAL,CACGC,IADH,CACQ,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,IAAT,EAAd,EADR,EAEGF,IAFH,CAEQ,SAACG,IAAD,CAAU,CACdN,UAAU,CAACM,IAAD,CAAV,CACD,CAJH,EAKD,CAPD,CAOG,EAPH,EASA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,MAAOR,CAAAA,OAAO,CAACS,GAAR,CAAY,SAACC,IAAD,CAAOC,KAAP,CAAiB,CAElC,mBACE,mCACE,oBAAKA,KAAL,EADF,cAEE,oBAAKD,IAAI,CAACE,IAAV,EAFF,cAGE,oBAAKF,IAAI,CAACG,KAAV,EAHF,cAIE,oBAAKH,IAAI,CAACI,QAAV,EAJF,cAKE,iCACE,KAAC,YAAD,EACE,KAAK,CAAEJ,IAAI,CAACK,OADd,CAEE,WAAW,CAAE,MAFf,CAGE,iBAAiB,CAAE,IAHrB,CAIE,MAAM,CAAE,KAJV,CAKE,YAAY,CAAE,GALhB,CAME,iBAAiB,CAAE,IANrB,EADF,EALF,GADF,CAkBD,CApBM,CAAP,CAqBD,CAtBD,CAuBA,mBACE,MAAC,KAAD,EAAO,OAAO,KAAd,CAAe,QAAQ,KAAvB,wBACE,sCACE,iCACE,WACE,OAAO,CAAC,IADV,CAEE,KAAK,CAAC,QAFR,CAGE,KAAK,CAAE,CAAEC,eAAe,CAAE,OAAnB,CAA4BC,KAAK,CAAE,OAAnC,CAHT,2BADF,EADF,cAUE,mCACE,yBADF,cAEE,4BAFF,cAGE,6BAHF,cAIE,gCAJF,cAKE,+BALF,GAVF,GADF,cAmBE,uBAAQT,WAAW,EAAnB,EAnBF,GADF,CAuBD,CAED,cAAeV,CAAAA,OAAf","sourcesContent":["import React from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nfunction AllData() {\r\n  const [allData, setAllData] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    // fetch all accounts from API\r\n    fetch(\"/account/all\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setAllData(data);\r\n      });\r\n  }, []);\r\n\r\n  const getRowsData = () => {\r\n    return allData.map((user, index) => {\r\n\r\n      return (\r\n        <tr>\r\n          <td>{index}</td>\r\n          <td>{user.name}</td>\r\n          <td>{user.email}</td>\r\n          <td>{user.password}</td>\r\n          <td>\r\n            <NumberFormat\r\n              value={user.balance}\r\n              displayType={\"text\"}\r\n              thousandSeparator={true}\r\n              prefix={\"  $\"}\r\n              decimalScale={\"2\"}\r\n              fixedDecimalScale={true}\r\n            />\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n  return (\r\n    <Table striped bordered>\r\n      <thead>\r\n        <tr>\r\n          <td\r\n            colSpan=\"45\"\r\n            align=\"center\"\r\n            style={{ backgroundColor: \"green\", color: \"white\" }}\r\n          >\r\n            USER ACCOUNTS\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th>#</th>\r\n          <th>Name</th>\r\n          <th>Email</th>\r\n          <th>Password</th>\r\n          <th>Balance</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>{getRowsData()}</tbody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nexport default AllData;\r\n"]},"metadata":{},"sourceType":"module"}